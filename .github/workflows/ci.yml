name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Run tests
      run: cargo test --verbose

    - name: Run clippy
      run: cargo clippy

    - name: Check formatting
      run: cargo fmt -- --check

  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_suffix: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_suffix: ".exe"
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_suffix: ""
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: cargo build --release --target ${{ matrix.target }} --verbose

    - name: Upload binary artifacts
      uses: actions/upload-artifact@v4
      with:
        name: abby_evm-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/abby_evm${{ matrix.binary_suffix }}
        retention-days: 30

    - name: Test examples (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        cargo run --release --target ${{ matrix.target }} -- execute --example simple-add
        cargo run --release --target ${{ matrix.target }} -- execute --example simple-mul
        cargo run --release --target ${{ matrix.target }} -- analyze --bytecode "6001600201"

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test, build]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Run integration tests
      run: |
        # Test CLI interface
        cargo build --release
        
        # Test file execution
        echo "6001600201" > test_bytecode.bin
        cargo run --release -- execute --file test_bytecode.bin
        
        # Test verbose mode
        cargo run --release -- execute --bytecode "6001600201" --verbose
        
        # Test gas limit
        cargo run --release -- execute --bytecode "6001600201" --gas-limit 100
        
        # Test analysis
        cargo run --release -- analyze --bytecode "6002600302"
        
        # Test examples listing
        cargo run --release -- examples --list
